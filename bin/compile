#!/bin/bash

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

# install dependencies

echo "-----> installing rust"

curl https://sh.rustup.rs -sSf | sh -s -- -y
export PATH="$HOME/.cargo/bin:$PATH"

rustup default stable


echo "-----> Installing Node.js..."
NODE_VERSION=18.17.1
NODE_DISTRO=linux-x64
curl -fsSL https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-$NODE_DISTRO.tar.gz | tar -xz
export PATH=$(pwd)/node-v$NODE_VERSION-$NODE_DISTRO/bin:$PATH

# echo "installing npm"
# curl -qL https://npmjs.org/install.sh | sh

echo "-----> Node.js version: $(node -v)"
echo "-----> npm version: $(npm -v)"

echo "-----> frontend found"

echo "-----> Building frontend"
cd "$BUILD_DIR/frontend" || exit 1
npm install
npm run build
cd "$BUILD_DIR" || exit 1

echo "       Frontend build complete"
echo "-----> Building Rust server"
cd "$BUILD_DIR/rust-server" || exit 1
cargo build -p actix-to-do-server --release

# echo "Inspecting the build directory"
# ls -l "$BUILD_DIR"
# echo "Inspecting the rust server directory"
# ls -l "$BUILD_DIR/rust-server"
# echo "Inspecting the target directory"
# ls -l "$BUILD_DIR/rust-server/target"
# echo "Inspecting the release directory"
# ls -l "$BUILD_DIR/rust-server/target/release"

cp "$BUILD_DIR/target/release/actix-to-do-server" "$BUILD_DIR/main" || exit 1
chmod +x "$BUILD_DIR/main"
# cp "$BUILD_DIR/rust-server/target/release/actix-to-do-server" "$BUILD_DIR/main" || exit 1
rm -rf $BUILD_DIR/target
rm -rf $BUILD_DIR/rust-server
rm -rf $BUILD_DIR/frontend



echo "       Rust server build complete"

echo "       done"